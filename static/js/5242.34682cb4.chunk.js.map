{"version":3,"file":"static/js/5242.34682cb4.chunk.js","mappings":"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","sources":["../node_modules/@iot-app-kit/components/dist/esm/chartDefaults-eb37c77e.js","../node_modules/@iot-app-kit/components/dist/esm/sc-line-chart.entry.js","../node_modules/@iot-app-kit/components/dist/esm/validate-4270e546.js"],"sourcesContent":["import { b as ScaleType, L as LEGEND_POSITION } from './constants-9d5458e0.js';\n\nconst DEFAULT_CHART_CONFIG = {\n    widgetId: 'fake-id',\n    viewport: {\n        start: new Date(1995, 0, 0, 0),\n        end: new Date(2020, 1, 0, 0),\n        yMin: 0,\n        yMax: 10000,\n    },\n    // width is width - marginLeft - marginRight\n    size: { width: 400 + 50 + 25, height: 350, marginLeft: 50, marginRight: 50, marginTop: 24, marginBottom: 30 },\n    movement: {\n        enableXScroll: true,\n        enableYScroll: false,\n        zoomMax: Infinity,\n        zoomMin: 0.00001,\n    },\n    layout: {\n        xGridVisible: false,\n        yGridVisible: true,\n        xTicksVisible: true,\n        yTicksVisible: true,\n    },\n    scale: {\n        xScaleType: ScaleType.TimeSeries,\n        yScaleType: ScaleType.Linear,\n        xScaleSide: 'bottom',\n        yScaleSide: 'left',\n    },\n    dataStreams: [],\n    legend: {\n        position: LEGEND_POSITION.BOTTOM,\n        width: 170,\n    },\n};\nconst DEFAULT_THRESHOLD_OPTIONS = {\n    showColor: true,\n};\nconst DEFAULT_THRESHOLD_OPTIONS_OFF = {\n    showColor: false,\n};\n\nexport { DEFAULT_CHART_CONFIG as D, DEFAULT_THRESHOLD_OPTIONS as a, DEFAULT_THRESHOLD_OPTIONS_OFF as b };\n","import { r as registerInstance, h } from './index-1cec361c.js';\nimport { u as updateChartScene, c as chartScene } from './chartScene-8136d831.js';\nimport { D as DEFAULT_CHART_CONFIG } from './chartDefaults-eb37c77e.js';\nimport { D as DATA_ALIGNMENT } from './constants-9d5458e0.js';\nimport { v as validate } from './validate-4270e546.js';\nimport { D as DataType } from './dataConstants-71f11842.js';\nimport './three.module-8c8bcb27.js';\nimport './pointMesh-7ba3f14f.js';\nimport './clipSpaceConversion-9fa25666.js';\nimport './v4-b6bb7e11.js';\nimport './_commonjsHelpers-f9dc4873.js';\nimport './getDataPoints-c53771e0.js';\nimport './index-42a9af88.js';\nimport './time-b684d8c5.js';\nimport './index-b3f1c3a1.js';\nimport './utils-0919edc8.js';\nimport './predicates-248e16b2.js';\nimport './number-3e8376bf.js';\nimport './bisector-ecf52045.js';\nimport './common-a2d0f0fb.js';\n\n// The initial size of buffers. The larger this is, the more memory allocated up front per chart.\n// The lower this number is, more likely that charts will have to re-initialize there buffers which is\n// a slow operation (CPU bound).\nconst DEFAULT_MIN_BUFFER_SIZE = 1000;\nconst DEFAULT_BUFFER_FACTOR = 2;\nconst tooltip = (props) => (h(\"sc-tooltip\", Object.assign({}, props, { visualizesAlarms: false, supportString: false, dataAlignment: DATA_ALIGNMENT.EITHER })));\nconst ScLineChart = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.gestures = true;\n    /** Status */\n    this.isEditing = false;\n    /** Memory Management */\n    this.bufferFactor = DEFAULT_BUFFER_FACTOR;\n    this.minBufferSize = DEFAULT_MIN_BUFFER_SIZE;\n  }\n  componentWillRender() {\n    validate(this);\n  }\n  render() {\n    return (h(\"sc-size-provider\", { size: this.size, renderFunc: (rect) => (h(\"sc-webgl-base-chart\", { supportedDataTypes: [DataType.NUMBER], axis: this.axis, alarms: this.alarms, gestures: this.gestures, configId: this.widgetId, legend: this.legend, annotations: this.annotations, trends: this.trends, updateChartScene: updateChartScene, createChartScene: chartScene, size: Object.assign(Object.assign(Object.assign({}, DEFAULT_CHART_CONFIG.size), this.size), rect), dataStreams: this.dataStreams, viewport: this.viewport, minBufferSize: this.minBufferSize, bufferFactor: this.bufferFactor, isEditing: this.isEditing, renderTooltip: tooltip, supportString: false, visualizesAlarms: false, messageOverrides: this.messageOverrides })) }));\n  }\n};\n\nexport { ScLineChart as sc_line_chart };\n","import { p as parse } from './index-b3f1c3a1.js';\nimport { a as isMinimalStaticViewport } from './predicates-248e16b2.js';\nimport { c as createCommonjsModule, a as getDefaultExportFromCjs } from './_commonjsHelpers-f9dc4873.js';\n\nvar assertString_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;\n});\n\nvar isISO8601_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;\n});\n\nconst isISO8601 = /*@__PURE__*/getDefaultExportFromCjs(isISO8601_1);\n\nconst isValidDate = (date) => (date instanceof Date ? true : isISO8601(date));\n\nconst validate = ({ viewport }) => {\n    // skips if viewport is undefine\n    if (viewport != null) {\n        /**\n         * We cannot enforce the type that is coming in. So we throw and warn message if all\n         * start, end, and duration is being passed in.\n         */\n        if (isMinimalStaticViewport(viewport) && viewport.duration != null) {\n            // eslint-disable-next-line no-console\n            console.warn('Detected both static and live viewport type. Duration will be used');\n        }\n        if (isMinimalStaticViewport(viewport) && (!isValidDate(viewport.start) || !isValidDate(viewport.end))) {\n            throw new Error(`Unable to parse start date: '${viewport.start}' and/or end date: '${viewport.end}'`);\n        }\n        if (!isMinimalStaticViewport(viewport) &&\n            typeof viewport.duration === 'string' &&\n            parse(viewport.duration, 'ms') == null) {\n            throw new Error(`Unable to parse duration: '${viewport.duration}'`);\n        }\n    }\n};\n\nexport { validate as v };\n"],"names":["DEFAULT_CHART_CONFIG","widgetId","viewport","start","Date","end","yMin","yMax","size","width","height","marginLeft","marginRight","marginTop","marginBottom","movement","enableXScroll","enableYScroll","zoomMax","Infinity","zoomMin","layout","xGridVisible","yGridVisible","xTicksVisible","yTicksVisible","scale","xScaleType","ScaleType","TimeSeries","yScaleType","Linear","xScaleSide","yScaleSide","dataStreams","legend","position","LEGEND_POSITION","BOTTOM","DEFAULT_THRESHOLD_OPTIONS","showColor","DEFAULT_THRESHOLD_OPTIONS_OFF","tooltip","props","h","Object","assign","visualizesAlarms","supportString","dataAlignment","DATA_ALIGNMENT","EITHER","ScLineChart","hostRef","_classCallCheck","registerInstance","this","gestures","isEditing","bufferFactor","minBufferSize","_createClass","key","value","validate","_this","renderFunc","rect","supportedDataTypes","DataType","NUMBER","axis","alarms","configId","annotations","trends","updateChartScene","createChartScene","chartScene","renderTooltip","messageOverrides","assertString_1","createCommonjsModule","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","defineProperty","default","input","String","invalidType","name","TypeError","concat","isISO8601_1","str","options","arguments","length","undefined","_assertString","check","strictSeparator","iso8601StrictSeparator","test","iso8601","strict","isValidDate","__esModule","ordinalMatch","match","oYear","Number","oDay","map","year","month","day","monthString","slice","dayString","d","getUTCFullYear","getUTCMonth","getUTCDate","isISO8601","getDefaultExportFromCjs","date","_ref","isMinimalStaticViewport","duration","console","warn","Error","parse"],"sourceRoot":""}