{"version":3,"file":"static/js/8981.784167fc.chunk.js","mappings":"4JAAA,IAAMA,EAAa,CACfC,MAAO,IACPC,OAAQ,I,oKCoBNC,G,qFAAQ,IAAIC,KAAK,IAAM,EAAG,IAC1BC,EAAQ,IAAID,KAAK,IAAM,EAAG,GAG1BE,EAAQD,EAAME,UAAYJ,EAAMI,UAChCC,EAAmB,CACvBC,EAAGN,EAAMI,UAAYD,EAAQ,EAC7BI,EAAG,IAECC,EAAmB,CACvBF,EAAGN,EAAMI,UAAYD,GAAS,EAAI,GAClCI,EAAG,IAECE,EAAmB,CACvBH,EAAGN,EAAMI,UAAYD,EAAQ,EAC7BI,EAAG,IAECG,EAAmB,CACvBJ,EAAGN,EAAMI,UAAYD,GAAS,EAAI,GAClCI,EAAG,IAECI,EAA0B,WAC9B,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,EACzB,CA4CqC,OA5CpCI,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,mBAAAC,MACD,WACE,IAAMC,EAAYJ,KAAKK,GAAGC,cAAc,mBAClCC,GAAQC,EAAAA,EAAAA,GAAW,CACvBC,SAAU,CACRC,MAAOzB,EACP0B,IAAKxB,EACLyB,KA7BM,EA8BNC,KA7BM,KA+BRC,YAAa,CACX,CACEC,GAAI,WACJC,KAAM,gBACNC,MAAO,MACPC,KAAM,CAAC5B,EAAkBG,GACzB0B,WAAY,EACZC,SAAUC,EAAAA,EAASC,QAErB,CACEP,GAAI,WACJC,KAAM,gBACNC,MAAO,QACPC,KAAM,CAACxB,EAAkBC,GACzBwB,WAAY,EACZC,SAAUC,EAAAA,EAASC,SAGvBlB,UAAAA,EACAmB,UAAWzC,EAAAA,EACX0C,cAAe,IACfC,aAAc,EACdC,iBAAkB,CAChBC,WAAW,GAEbC,WAAY,KAEdC,EAAAA,EAAcC,cAAc,CAAEC,QAASxB,IACvC,IAAMyB,EAAO5B,EAAU6B,wBACvBJ,EAAAA,EAAcK,aAAa3B,EAAMQ,GAAIoB,OAAOC,OAAO,CAAEC,QAAS,GAAKL,EAAKM,UAC1E,GAAC,CAAApC,IAAA,SAAAC,MACD,WACE,OAAQoC,EAAAA,EAAAA,GAAE,mBAAoB,MAAMA,EAAAA,EAAAA,GAAE,MAAO,CAAExB,GAAI,iBAAkByB,MAAO,CAAEzD,MAAO,GAAF0D,OAAK3D,EAAAA,EAAWC,MAAK,MAAMC,OAAQ,GAAFyD,OAAK3D,EAAAA,EAAWE,OAAM,SAC5I,GAAC,CAAAkB,IAAA,KAAAwC,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAW3C,KAAO,KAACJ,CAAA,CA/CP,E","sources":["../node_modules/@iot-app-kit/components/dist/esm/chartSize-74a4bea8.js","../node_modules/@iot-app-kit/components/dist/esm/sc-multiple-lines-overlapping.entry.js"],"sourcesContent":["const CHART_SIZE = {\n    width: 100,\n    height: 100,\n};\n\nexport { CHART_SIZE as C };\n","import { r as registerInstance, h, g as getElement } from './index-1cec361c.js';\nimport { w as webGLRenderer } from './webglContext-6c9fd90d.js';\nimport { c as chartScene } from './chartScene-8136d831.js';\nimport { C as CHART_SIZE } from './chartSize-74a4bea8.js';\nimport { D as DataType } from './dataConstants-71f11842.js';\nimport './three.module-8c8bcb27.js';\nimport './predicates-248e16b2.js';\nimport './pointMesh-7ba3f14f.js';\nimport './clipSpaceConversion-9fa25666.js';\nimport './v4-b6bb7e11.js';\nimport './_commonjsHelpers-f9dc4873.js';\nimport './getDataPoints-c53771e0.js';\nimport './index-42a9af88.js';\nimport './time-b684d8c5.js';\nimport './index-b3f1c3a1.js';\nimport './utils-0919edc8.js';\nimport './number-3e8376bf.js';\nimport './constants-9d5458e0.js';\nimport './bisector-ecf52045.js';\nimport './common-a2d0f0fb.js';\n\n// viewport boundaries\nconst X_MIN = new Date(2000, 0, 0);\nconst X_MAX = new Date(2000, 0, 1);\nconst Y_MIN = 0;\nconst Y_MAX = 100;\nconst WIDTH = X_MAX.getTime() - X_MIN.getTime();\nconst STREAM_1_POINT_1 = {\n  x: X_MIN.getTime() + WIDTH / 3,\n  y: 55,\n};\nconst STREAM_1_POINT_2 = {\n  x: X_MIN.getTime() + WIDTH * (2 / 3),\n  y: 45,\n};\nconst STREAM_2_POINT_1 = {\n  x: X_MIN.getTime() + WIDTH / 3,\n  y: 45,\n};\nconst STREAM_2_POINT_2 = {\n  x: X_MIN.getTime() + WIDTH * (2 / 3),\n  y: 55,\n};\nconst ScMultipleLinesOverlapping = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentDidLoad() {\n    const container = this.el.querySelector('#test-container');\n    const scene = chartScene({\n      viewport: {\n        start: X_MIN,\n        end: X_MAX,\n        yMin: Y_MIN,\n        yMax: Y_MAX,\n      },\n      dataStreams: [\n        {\n          id: 'stream-1',\n          name: 'stream-1-name',\n          color: 'red',\n          data: [STREAM_1_POINT_1, STREAM_1_POINT_2],\n          resolution: 0,\n          dataType: DataType.NUMBER,\n        },\n        {\n          id: 'stream-2',\n          name: 'stream-2-name',\n          color: 'green',\n          data: [STREAM_2_POINT_1, STREAM_2_POINT_2],\n          resolution: 0,\n          dataType: DataType.NUMBER,\n        },\n      ],\n      container,\n      chartSize: CHART_SIZE,\n      minBufferSize: 100,\n      bufferFactor: 2,\n      thresholdOptions: {\n        showColor: false,\n      },\n      thresholds: [],\n    });\n    webGLRenderer.addChartScene({ manager: scene });\n    const rect = container.getBoundingClientRect();\n    webGLRenderer.setChartRect(scene.id, Object.assign({ density: 1 }, rect.toJSON()));\n  }\n  render() {\n    return (h(\"sc-webgl-context\", null, h(\"div\", { id: \"test-container\", style: { width: `${CHART_SIZE.width}px`, height: `${CHART_SIZE.height}px` } })));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { ScMultipleLinesOverlapping as sc_multiple_lines_overlapping };\n"],"names":["CHART_SIZE","width","height","X_MIN","Date","X_MAX","WIDTH","getTime","STREAM_1_POINT_1","x","y","STREAM_1_POINT_2","STREAM_2_POINT_1","STREAM_2_POINT_2","ScMultipleLinesOverlapping","hostRef","_classCallCheck","registerInstance","this","_createClass","key","value","container","el","querySelector","scene","chartScene","viewport","start","end","yMin","yMax","dataStreams","id","name","color","data","resolution","dataType","DataType","NUMBER","chartSize","minBufferSize","bufferFactor","thresholdOptions","showColor","thresholds","webGLRenderer","addChartScene","manager","rect","getBoundingClientRect","setChartRect","Object","assign","density","toJSON","h","style","concat","get","getElement"],"sourceRoot":""}