{"version":3,"file":"static/js/7308.9afbb993.chunk.js","mappings":"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","sources":["../node_modules/@iot-app-kit/components/dist/esm/dataFilters-fa384f64.js","../node_modules/@iot-app-kit/components/dist/esm/sc-grid_4.entry.js","../node_modules/@iot-app-kit/components/dist/esm/validate-4270e546.js","../node_modules/@iot-app-kit/components/dist/esm/viewPort-358a51a4.js"],"sourcesContent":["import { a as isMinimalStaticViewport } from './predicates-248e16b2.js';\nimport { p as parseDuration } from './time-b684d8c5.js';\nimport { b as bisector } from './bisector-ecf52045.js';\n\n// By doing the mapping to a date within the bisector\n// we eliminate the need to iterate over the entire data.\n// (As opposed to mapping entire data to an array of dates)\nconst pointBisector = bisector((p) => p.x);\n/**\n * Get Visible Data\n *\n * Returns the data points which are required for the chart to correctly render.\n * This assumes linear interpolation between points\n * TODO: Support other interpolation methods\n *\n * NOTE: It's possible to have data not in the viewport which is required for the chart to render\n * it's fully visualization correctly. For Instance, even if a point isn't visible in the viewport, it may\n * be used within interpolation to calculate a path between the points which is within the viewport.\n *\n * Different interpolation methods need larger amount of context around the viewport to correctly render\n * the chart visualization.\n */\nconst getVisibleData = (data, viewport, \n// Whether we want to include a single point to the right, and to the left of the provide viewport.\n// This is useful when rendering lines since you need to connect a point to a point outside of the viewport\n// to fully render the data correctly.\nincludeBoundaryPoints = true) => {\n    const start = isMinimalStaticViewport(viewport)\n        ? new Date(viewport.start)\n        : new Date(Date.now() - parseDuration(viewport.duration));\n    const end = isMinimalStaticViewport(viewport) ? new Date(viewport.end) : new Date();\n    // If there is no data\n    if (data.length === 0) {\n        return [];\n    }\n    // If all data is before the view port\n    if (start.getTime() > data[data.length - 1].x) {\n        return [];\n    }\n    // If all data is after the view port\n    if (end.getTime() < data[0].x) {\n        return [];\n    }\n    // Otherwise return all the data within the viewport, plus an additional single data point that falls outside of\n    // the viewport in either direction.\n    const startIndex = Math.max(pointBisector.left(data, start) - (includeBoundaryPoints ? 1 : 0), 0);\n    const endIndex = Math.min(pointBisector.right(data, end) - (includeBoundaryPoints ? 0 : 1), data.length - 1);\n    return data.slice(startIndex, endIndex + 1);\n};\n/**\n * Returns all data before or at the given date.\n *\n * Assumes data is ordered chronologically.\n */\nconst getDataBeforeDate = (data, date) => {\n    // If there is no data\n    if (data.length === 0) {\n        return [];\n    }\n    // If all data is after the view port\n    if (date.getTime() < data[0].x) {\n        return [];\n    }\n    // Otherwise return all the data within the viewport, plus an additional single data point that falls outside of\n    // the viewport in either direction.\n    const endIndex = Math.min(pointBisector.right(data, date) - 1, data.length - 1);\n    return data.slice(0, endIndex + 1);\n};\n\nexport { getVisibleData as a, getDataBeforeDate as g, pointBisector as p };\n","import { r as registerInstance, h, g as getElement, c as createEvent } from './index-1cec361c.js';\nimport { t as tippy, T as TIPPY_SETTINGS } from './toolTipSettings-4e464f5d.js';\nimport { V as Value } from './Value-47ec6a7b.js';\nimport { l as lodash_throttle, D as DATE_RANGE_EMIT_EVENT_MS } from './constants-3de41941.js';\nimport { D as DEFAULT_MESSAGE_OVERRIDES } from './dataTypes-7f768b75.js';\nimport { u as updateName } from './helper-534fd488.js';\nimport { a as activePoints, b as breachedThreshold } from './breachedThreshold-ec78e357.js';\nimport { b as getThresholds } from './utils-0919edc8.js';\nimport { c as isDefined, a as isMinimalStaticViewport } from './predicates-248e16b2.js';\nimport { S as StreamType } from './dataConstants-71f11842.js';\nimport { v as viewportStartDate, a as viewportEndDate, i as isInLiveMode } from './viewPort-358a51a4.js';\nimport { D as DATA_ALIGNMENT } from './constants-9d5458e0.js';\nimport { p as parseDuration } from './time-b684d8c5.js';\nimport { g as getDataStreamForEventing } from './common-a2d0f0fb.js';\nimport { v as validate } from './validate-4270e546.js';\nimport { w as webGLRenderer } from './webglContext-6c9fd90d.js';\nimport './number-3e8376bf.js';\nimport './terms-7b76cdf8.js';\nimport './_commonjsHelpers-f9dc4873.js';\nimport './dataFilters-fa384f64.js';\nimport './bisector-ecf52045.js';\nimport './getDataPoints-c53771e0.js';\nimport './index-b3f1c3a1.js';\nimport './three.module-8c8bcb27.js';\n\nconst scGridCss = \"sc-grid .grid{--widget-min-width:190px;--widget-min-height:100px;display:grid;grid-template-columns:repeat(auto-fit, minmax(var(--widget-min-width), 1fr));grid-auto-rows:minmax(var(--widget-min-height), 1fr);grid-gap:10px;margin:10px}sc-grid .grid-wrapper{display:flex;flex-direction:column;justify-content:center;align-content:center}\";\n\nconst ScGrid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(\"div\", { class: \"grid-wrapper\" }, h(\"div\", { class: \"grid\" }, h(\"slot\", null))));\n  }\n};\nScGrid.style = scGridCss;\n\nconst ScGridTooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.displayToolTip = () => {\n      const container = this.el.querySelector('.tooltip-container');\n      const tooltip = this.el.querySelector('.cell-tooltip');\n      if (tooltip != null && container != null) {\n        tooltip.style.display = 'block';\n        this.tooltip = tippy(container, Object.assign(Object.assign({}, TIPPY_SETTINGS), { placement: 'left', content: tooltip }));\n      }\n    };\n  }\n  componentDidLoad() {\n    this.displayToolTip();\n  }\n  disconnectedCallback() {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n  }\n  render() {\n    const thereIsSomeData = this.propertyPoint != null || this.alarmPoint != null;\n    const color = this.breachedThreshold ? this.breachedThreshold.color : undefined;\n    const displaysMoreThanTitle = thereIsSomeData && this.isEnabled;\n    return (h(\"div\", { class: \"tooltip-container\" }, h(\"div\", { class: \"cell-tooltip awsui-util-container awsui\" }, h(\"div\", { class: { 'awsui-util-container-header': true, 'awsui-util-mb-m': displaysMoreThanTitle } }, h(\"h3\", null, this.title)), displaysMoreThanTitle && (h(\"div\", null, h(\"div\", { class: \"awsui-util-spacing-v-s\" }, this.propertyPoint && (h(\"div\", null, h(\"div\", { class: \"awsui-util-label\" }, \"Latest value:\"), h(\"div\", null, h(\"strong\", { style: { color } }, h(Value, { value: this.propertyPoint.y })), ' ', \"at\", ' ', new Date(this.propertyPoint.x).toLocaleString('en-US', {\n      hour12: true,\n      minute: 'numeric',\n      hour: 'numeric',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    })))), this.alarmPoint && (h(\"div\", null, h(\"div\", { class: \"awsui-util-label\" }, \"Status:\"), h(\"div\", null, h(\"strong\", { style: { color } }, h(Value, { value: this.alarmPoint.y })), ' ', \"since\", ' ', new Date(this.alarmPoint.x).toLocaleString('en-US', {\n      hour12: true,\n      minute: 'numeric',\n      hour: 'numeric',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    }), this.breachedThreshold && this.breachedThreshold.description && (h(\"div\", null, \"(\", this.breachedThreshold.description, \")\"))))))))), h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n};\n\n/* eslint-disable max-len */\nconst QuestionMarkIcon = () => (h(\"svg\", { width: \"25px\", height: \"25px\", viewBox: \"0 0 30 30\" },\n    h(\"defs\", null,\n        h(\"path\", { d: \"M14.8742857,24.7485714 C20.3277031,24.7485714 24.7485714,20.3277031 24.7485714,14.8742857 C24.7485714,9.4208683 20.3277031,5 14.8742857,5 C9.4208683,5 5,9.4208683 5,14.8742857 C5,20.3277031 9.4208683,24.7485714 14.8742857,24.7485714 Z M13.64,18.5771429 L16.1566605,18.5771429 L16.1566605,21.0457143 L13.64,21.0457143 L13.64,18.5771429 Z M10.7019512,12.6821943 C10.7134712,12.0601112 10.8200302,11.4898769 11.0216312,10.9714743 C11.2232322,10.4530717 11.5054693,10.0037962 11.8683512,9.62363429 C12.231233,9.24347238 12.6689886,8.94683535 13.1816312,8.73371429 C13.6942737,8.52059322 14.267388,8.41403429 14.9009912,8.41403429 C15.7189152,8.41403429 16.4014684,8.52635316 16.9486712,8.75099429 C17.4958739,8.97563541 17.9365095,9.25499262 18.2705912,9.58907429 C18.6046728,9.92315596 18.8437104,10.2831524 18.9877112,10.6690743 C19.1317119,11.0549962 19.2037112,11.4149926 19.2037112,11.7490743 C19.2037112,12.3020371 19.1317119,12.7570725 18.9877112,13.1141943 C18.8437104,13.4713161 18.6651522,13.776593 18.4520312,14.0300343 C18.2389101,14.2834756 18.0027525,14.4994734 17.7435512,14.6780343 C17.4843499,14.8565952 17.2395523,15.0351534 17.0091512,15.2137143 C16.77875,15.3922752 16.5742721,15.5967531 16.3957112,15.8271543 C16.2171503,16.0575554 16.1546517,16.3455526 16.1085714,16.6911543 L16.1085714,17.3477943 L13.64,17.3477943 L13.64,16.5701943 C13.64,15.9718011 13.7557976,15.6706595 13.9113184,15.3365778 C14.0668391,15.0024962 14.3480301,14.7068355 14.5553912,14.4706743 C14.7627522,14.2345131 14.98163,14.0300351 15.2120312,13.8572343 C15.4424323,13.6844334 15.6555502,13.5116351 15.8513912,13.3388343 C16.0472321,13.1660334 16.2056306,12.9759553 16.3265912,12.7685943 C16.4475518,12.5612332 16.5022712,12.3020358 16.4907512,11.9909943 C16.4907512,11.4610716 16.3611525,11.0693956 16.1019512,10.8159543 C15.8427499,10.562513 15.4827535,10.4357943 15.0219512,10.4357943 C14.7109096,10.4357943 14.4430723,10.4962737 14.2184312,10.6172343 C13.99379,10.7381949 13.8094719,10.8994733 13.6654712,11.1010743 C13.5214704,11.3026753 13.4149115,11.5388329 13.3457912,11.8095543 C13.2766708,12.0802756 13.2421112,12.3711527 13.2421112,12.6821943 L10.7019512,12.6821943 Z\", id: \"path-1\" })),\n    h(\"g\", { fill: \"none\" },\n        h(\"rect\", { x: \"0\", y: \"0\", width: \"30\", height: \"30\" }),\n        h(\"mask\", { id: \"mask-2\", fill: \"white\" },\n            h(\"use\", { xlinkHref: \"#path-1\" })),\n        h(\"g\", { id: \"Oval\" }),\n        h(\"g\", { mask: \"url(#mask-2)\", fill: \"#DEE0E2\" },\n            h(\"rect\", { x: \"0\", y: \"0\", width: \"30\", height: \"30\" })))));\n\nconst ScHelpTooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.displayToolTip = () => {\n      const container = this.el.querySelector('.help-icon');\n      const tooltip = this.el.querySelector('[role=\"tooltip\"]');\n      if (tooltip != null && container != null) {\n        tooltip.style.display = 'block';\n        this.tooltip = tippy(container, Object.assign(Object.assign({}, TIPPY_SETTINGS), { content: tooltip }));\n      }\n    };\n  }\n  disconnectedCallback() {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n  }\n  render() {\n    return (h(\"div\", { class: \"help-icon\", tabIndex: -1, onMouseOver: this.displayToolTip, onFocus: this.displayToolTip }, h(QuestionMarkIcon, null), h(\"div\", { role: \"tooltip\", class: \"awsui-util-container awsui\", style: { display: 'none' } }, h(\"div\", { class: \"awsui-util-spacing-v-s\" }, h(\"p\", null, this.message)))));\n  }\n  get el() { return getElement(this); }\n};\n\n/**\n * Given a list of infos, return the ones that are to be visualized.\n *\n * This will remove any alarms that don't have an associated property info.\n */\nconst removePairedAlarms = (streams) => {\n    const alarmInfos = streams.filter(({ streamType }) => streamType === StreamType.ALARM);\n    const propertyInfos = streams.filter(({ streamType }) => streamType !== StreamType.ALARM);\n    // If an alarm is not 'part' of any property info, it is a stray and can be visualized.\n    const isStrayAlarm = ({ id }) => !propertyInfos.some(({ associatedStreams = [] }) => associatedStreams.some(a => a.id === id));\n    const strayAlarmInfos = alarmInfos.filter(isStrayAlarm);\n    const visualizedInfoIds = [...propertyInfos, ...strayAlarmInfos].map(({ id }) => id);\n    // Want to maintain the original order, so we will filter out what isn't included from our original input.\n    return streams.filter(({ id }) => visualizedInfoIds.includes(id)).filter(isDefined);\n};\n/**\n * Returns alarm/property pairs.\n *\n * For instance, if you have one property with 3 alarms associated with it, this will return you 3 pairs in total. One pair for each alarm.\n */\nconst streamPairs = (dataStreams) => {\n    const primaryInfos = removePairedAlarms(dataStreams);\n    return primaryInfos\n        .map(stream => {\n        if (stream.streamType === StreamType.ALARM) {\n            // if it's an alarm an not removed, that means it's not pair, and has no associated property.\n            return [{ alarm: stream }];\n        }\n        const hasNoAssociatedAlarms = stream.associatedStreams == null || !stream.associatedStreams.some(({ type }) => type === StreamType.ALARM);\n        if (hasNoAssociatedAlarms) {\n            // No alarms, just report back the property\n            return [{ property: stream }];\n        }\n        // Return on cell info for each alarm associated\n        return (stream.associatedStreams || [])\n            .map(({ id: associatedId }) => dataStreams.find(({ id: id2 }) => id2 === associatedId))\n            .filter(isDefined)\n            .map(alarmInfo => ({\n            property: stream,\n            alarm: alarmInfo,\n        }));\n    })\n        .flat();\n};\n\nconst scWidgetGridCss = \"sc-widget-grid .help-icon-container{z-index:100;position:absolute;right:0;top:0}sc-widget-grid .container{display:flex;flex-direction:column;height:100%;overflow:auto;position:relative;-ms-overflow-style:none;scrollbar-width:none}sc-widget-grid .container::-webkit-scrollbar{display:none}\";\n\nconst title = ({ alarm, property }) => {\n  if (property) {\n    return property.detailedName || property.name;\n  }\n  if (alarm) {\n    return alarm.detailedName || alarm.name;\n  }\n  return '';\n};\nconst ScWidgetGrid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dateRangeChange = createEvent(this, \"dateRangeChange\", 7);\n    this.widgetUpdated = createEvent(this, \"widgetUpdated\", 7);\n    this.collapseVertically = true;\n    this.isEditing = false;\n    this.messageOverrides = {};\n    /** Widget data stream names */\n    this.names = [];\n    /** Active Viewport */\n    this.start = viewportStartDate(this.viewport);\n    this.end = viewportEndDate(this.viewport);\n    this.duration = !isMinimalStaticViewport(this.viewport)\n      ? parseDuration(this.viewport.duration)\n      : undefined;\n    this.onDateRangeChange = lodash_throttle(([start, end, from]) => {\n      this.dateRangeChange.emit([start, end, from]);\n    }, DATE_RANGE_EMIT_EVENT_MS, {\n      leading: true,\n      trailing: true,\n    });\n    this.onUpdate = ({ start, end, duration }) => {\n      const hasViewPortChanged = viewportStartDate(this.viewport).getTime() !== start.getTime() ||\n        viewportEndDate(this.viewport).getTime() !== end.getTime();\n      const inLiveMode = isInLiveMode(this.viewport);\n      if (hasViewPortChanged && !inLiveMode) {\n        this.onDateRangeChange([start, end, this.viewport.group]);\n      }\n      // Update active viewport\n      this.start = start;\n      this.end = end;\n      this.duration = duration;\n    };\n    /**\n     * Emit the current widget configuration\n     */\n    this.emitUpdatedWidgetConfiguration = (dataStreams) => {\n      const configUpdate = {\n        movement: undefined,\n        scale: undefined,\n        layout: undefined,\n        legend: undefined,\n        annotations: this.annotations,\n        axis: undefined,\n        widgetId: this.widgetId,\n        dataStreams: dataStreams ? getDataStreamForEventing(dataStreams) : this.dataStreams,\n      };\n      this.widgetUpdated.emit(configUpdate);\n    };\n    this.onChangeLabel = ({ streamId, name }) => {\n      this.names = updateName(this.names, name, streamId);\n      this.onWidgetUpdated();\n    };\n    this.getPoints = () => activePoints({\n      viewport: {\n        start: this.start,\n        end: this.end,\n      },\n      dataStreams: this.dataStreams,\n      selectedDate: this.end,\n      allowMultipleDates: true,\n      dataAlignment: DATA_ALIGNMENT.EITHER,\n    });\n    this.getBreachedThreshold = (point, dataStream) => breachedThreshold({\n      value: point && point.y,\n      date: isMinimalStaticViewport(this.viewport) ? new Date(this.viewport.end) : new Date(),\n      dataStreams: this.dataStreams,\n      dataStream,\n      thresholds: getThresholds(this.annotations),\n    });\n  }\n  componentWillRender() {\n    validate(this);\n  }\n  componentDidLoad() {\n    webGLRenderer.addChartScene({\n      manager: {\n        id: this.widgetId,\n        viewportGroup: this.viewport.group,\n        updateViewPort: this.onUpdate,\n      },\n      duration: this.duration,\n    });\n  }\n  onViewPortChange(newViewPort) {\n    this.onUpdate(Object.assign(Object.assign({}, newViewPort), { duration: !isMinimalStaticViewport(newViewPort) ? parseDuration(newViewPort.duration) : undefined, start: viewportStartDate(this.viewport), end: viewportEndDate(this.viewport) }));\n  }\n  disconnectedCallback() {\n    // necessary to make sure that the allocated memory is released, and nothing is incorrectly rendered.\n    webGLRenderer.removeChartScene(this.widgetId);\n  }\n  /**\n   * On Widget Updated - Persist `DataStreamInfo`\n   *\n   * Emits an event which persists the current `NameValue[]` state into the\n   * data stream info.\n   */\n  onWidgetUpdated() {\n    // Construct the config update with the new names specified.\n    const updatedDataStreams = this.dataStreams.map(dataStream => {\n      const nameValue = this.names.find(({ id: nameId }) => dataStream.id === nameId);\n      const name = nameValue != null ? nameValue.name : dataStream.name;\n      return Object.assign(Object.assign({}, dataStream), { name });\n    });\n    this.emitUpdatedWidgetConfiguration(updatedDataStreams);\n  }\n  render() {\n    var _a, _b;\n    const isEnabled = this.duration != null;\n    const points = this.getPoints();\n    const pairs = streamPairs(this.dataStreams);\n    const isMiniVersion = pairs.length > 1;\n    return (h(\"div\", { class: { tall: !this.collapseVertically } }, !isEnabled && (h(\"div\", { class: \"help-icon-container\" }, h(\"sc-help-tooltip\", { message: (_b = (_a = this.messageOverrides) === null || _a === void 0 ? void 0 : _a.liveModeOnly) !== null && _b !== void 0 ? _b : DEFAULT_MESSAGE_OVERRIDES.liveModeOnly }))), h(\"sc-grid\", null, pairs.map(({ alarm, property }) => {\n      const stream = alarm || property;\n      if (stream == null) {\n        return undefined;\n      }\n      const alarmPointWrapper = alarm && points.find(p => p.streamId === alarm.id);\n      const propertyPointWrapper = property && points.find(p => p.streamId === property.id);\n      const alarmPoint = alarmPointWrapper ? alarmPointWrapper.point : undefined;\n      const propertyPoint = propertyPointWrapper ? propertyPointWrapper.point : undefined;\n      const pointToEvaluateOn = alarmPoint || propertyPoint;\n      const infoToEvaluateOn = alarm || property;\n      const threshold = pointToEvaluateOn && infoToEvaluateOn && this.getBreachedThreshold(pointToEvaluateOn, infoToEvaluateOn);\n      const alarmStream = alarm && this.dataStreams.find(s => s.id === alarm.id);\n      const primaryStream = alarm ? alarmStream : property;\n      return (h(\"sc-grid-tooltip\", { title: title({ alarm, property }), propertyPoint: propertyPoint, alarmPoint: alarmPoint, breachedThreshold: threshold, isEnabled: isEnabled }, this.renderCell({\n        isEnabled,\n        trendStream: property,\n        propertyStream: property,\n        propertyPoint,\n        alarmStream,\n        alarmPoint,\n        breachedThreshold: threshold,\n        isEditing: this.isEditing,\n        viewport: { start: this.start, end: this.end },\n        miniVersion: isMiniVersion,\n        onChangeLabel: this.onChangeLabel,\n        messageOverrides: this.messageOverrides,\n        labelsConfig: this.labelsConfig,\n        icon: threshold ? threshold.icon : undefined,\n        valueColor: threshold ? threshold.color : undefined,\n        error: primaryStream ? primaryStream.error : undefined,\n        isLoading: primaryStream ? primaryStream.isLoading || false : false,\n        isRefreshing: primaryStream ? primaryStream.isRefreshing || false : false,\n      })));\n    }))));\n  }\n  static get watchers() { return {\n    \"viewport\": [\"onViewPortChange\"]\n  }; }\n};\nScWidgetGrid.style = scWidgetGridCss;\n\nexport { ScGrid as sc_grid, ScGridTooltip as sc_grid_tooltip, ScHelpTooltip as sc_help_tooltip, ScWidgetGrid as sc_widget_grid };\n","import { p as parse } from './index-b3f1c3a1.js';\nimport { a as isMinimalStaticViewport } from './predicates-248e16b2.js';\nimport { c as createCommonjsModule, a as getDefaultExportFromCjs } from './_commonjsHelpers-f9dc4873.js';\n\nvar assertString_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;\n});\n\nvar isISO8601_1 = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;\n});\n\nconst isISO8601 = /*@__PURE__*/getDefaultExportFromCjs(isISO8601_1);\n\nconst isValidDate = (date) => (date instanceof Date ? true : isISO8601(date));\n\nconst validate = ({ viewport }) => {\n    // skips if viewport is undefine\n    if (viewport != null) {\n        /**\n         * We cannot enforce the type that is coming in. So we throw and warn message if all\n         * start, end, and duration is being passed in.\n         */\n        if (isMinimalStaticViewport(viewport) && viewport.duration != null) {\n            // eslint-disable-next-line no-console\n            console.warn('Detected both static and live viewport type. Duration will be used');\n        }\n        if (isMinimalStaticViewport(viewport) && (!isValidDate(viewport.start) || !isValidDate(viewport.end))) {\n            throw new Error(`Unable to parse start date: '${viewport.start}' and/or end date: '${viewport.end}'`);\n        }\n        if (!isMinimalStaticViewport(viewport) &&\n            typeof viewport.duration === 'string' &&\n            parse(viewport.duration, 'ms') == null) {\n            throw new Error(`Unable to parse duration: '${viewport.duration}'`);\n        }\n    }\n};\n\nexport { validate as v };\n","import { a as isMinimalStaticViewport } from './predicates-248e16b2.js';\nimport { p as parseDuration } from './time-b684d8c5.js';\n\nconst viewportStartDate = (viewportConfig) => isMinimalStaticViewport(viewportConfig)\n    ? new Date(viewportConfig.start)\n    : new Date(Date.now() - parseDuration(viewportConfig.duration));\nconst viewportEndDate = (viewportConfig) => {\n    return isMinimalStaticViewport(viewportConfig) ? new Date(viewportConfig.end) : new Date(Date.now());\n};\nconst isInLiveMode = (viewport) => {\n    return !isMinimalStaticViewport(viewport) && Boolean(viewport.duration);\n};\n\nexport { viewportEndDate as a, isInLiveMode as i, viewportStartDate as v };\n"],"names":["pointBisector","bisector","p","x","getVisibleData","data","viewport","includeBoundaryPoints","arguments","length","undefined","start","isMinimalStaticViewport","Date","now","parseDuration","duration","end","getTime","startIndex","Math","max","left","endIndex","min","right","slice","getDataBeforeDate","date","ScGrid","hostRef","_classCallCheck","registerInstance","this","_createClass","key","value","h","class","style","ScGridTooltip","_this","displayToolTip","container","el","querySelector","tooltip","display","tippy","Object","assign","TIPPY_SETTINGS","placement","content","destroy","thereIsSomeData","propertyPoint","alarmPoint","color","breachedThreshold","displaysMoreThanTitle","isEnabled","title","Value","y","toLocaleString","hour12","minute","hour","year","month","day","description","get","getElement","QuestionMarkIcon","width","height","viewBox","d","id","fill","xlinkHref","mask","ScHelpTooltip","_this2","tabIndex","onMouseOver","onFocus","role","message","streamPairs","dataStreams","streams","alarmInfos","filter","_ref","streamType","StreamType","ALARM","propertyInfos","_ref2","strayAlarmInfos","_ref3","some","_ref4","_ref4$associatedStrea","associatedStreams","a","visualizedInfoIds","concat","_toConsumableArray","map","_ref5","_ref6","includes","isDefined","removePairedAlarms","stream","alarm","_ref7","type","property","_ref8","associatedId","find","_ref9","alarmInfo","flat","_ref10","detailedName","name","ScWidgetGrid","_this3","dateRangeChange","createEvent","widgetUpdated","collapseVertically","isEditing","messageOverrides","names","viewportStartDate","viewportEndDate","onDateRangeChange","lodash_throttle","_ref11","_ref12","_slicedToArray","from","emit","DATE_RANGE_EMIT_EVENT_MS","leading","trailing","onUpdate","_ref13","hasViewPortChanged","inLiveMode","isInLiveMode","group","emitUpdatedWidgetConfiguration","configUpdate","movement","scale","layout","legend","annotations","axis","widgetId","getDataStreamForEventing","onChangeLabel","_ref14","streamId","updateName","onWidgetUpdated","getPoints","activePoints","selectedDate","allowMultipleDates","dataAlignment","DATA_ALIGNMENT","EITHER","getBreachedThreshold","point","dataStream","thresholds","getThresholds","validate","webGLRenderer","addChartScene","manager","viewportGroup","updateViewPort","newViewPort","removeChartScene","_this4","updatedDataStreams","nameValue","_ref15","nameId","_a","_b","_this5","points","pairs","isMiniVersion","tall","liveModeOnly","DEFAULT_MESSAGE_OVERRIDES","_ref16","alarmPointWrapper","propertyPointWrapper","pointToEvaluateOn","infoToEvaluateOn","threshold","alarmStream","s","primaryStream","renderCell","trendStream","propertyStream","miniVersion","labelsConfig","icon","valueColor","error","isLoading","isRefreshing","assertString_1","createCommonjsModule","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","defineProperty","default","input","String","invalidType","TypeError","isISO8601_1","str","options","_assertString","check","strictSeparator","iso8601StrictSeparator","test","iso8601","strict","isValidDate","__esModule","ordinalMatch","match","oYear","Number","oDay","monthString","dayString","getUTCFullYear","getUTCMonth","getUTCDate","isISO8601","getDefaultExportFromCjs","console","warn","Error","parse","viewportConfig","Boolean"],"sourceRoot":""}