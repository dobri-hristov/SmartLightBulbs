{"version":3,"file":"static/js/4319.692a0a9e.chunk.js","mappings":"oPAWMA,EAAS,WACb,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,YAAc,WAAgB,EACnCD,KAAKE,YAAc,cACnBF,KAAKG,OAAQ,EACbH,KAAKI,QAAS,EAIdJ,KAAKK,OAAS,IACdL,KAAKM,MAAQ,IACf,CAwCI,OAxCHC,EAAAA,EAAAA,GAAAX,EAAA,EAAAY,IAAA,oBAAAC,MACD,WACET,KAAKU,cACP,GACA,CAAAF,IAAA,eAAAC,MACA,WACMT,KAAKW,WACPX,KAAKM,OAAQM,EAAAA,EAAAA,GAAUZ,KAAKW,SAASE,SAAU,CAC7CC,KAAMd,KAAKe,UAAYf,KAAKgB,IAC5Bb,MAAOH,KAAKG,MACZC,OAAQJ,KAAKI,SAGnB,GAAC,CAAAI,IAAA,cAAAC,MACD,SAAYQ,GAjCC,IAACD,EAAKE,EAkCjB,KAAIC,EAAAA,EAAAA,GAAgBF,IAAOjB,KAAKoB,SAAYpB,KAAKgB,KAAQhB,KAAKkB,KAI9D,OADAD,EAAEI,iBACKrB,KAAKoB,QAAQE,MAtCRN,EAsCoBhB,KAAKgB,IAtCpBE,EAsCyBlB,KAAKkB,KApC5B,KAAjBF,EAAIO,OAAO,IAA6C,KAAhCL,EAAKK,OAAOL,EAAKM,OAAS,GAC7CN,EAAKO,MAAM,EAAGP,EAAKM,OAAS,GAAKR,EAEnCE,EAAOF,GAkCd,GACA,CAAAR,IAAA,SAAAC,MACA,WACE,IAAIiB,EAAmB,CACrBC,OAAKC,EAAAA,EAAAA,GAAA,GACF5B,KAAKE,YAA6B,OAAfF,KAAKM,OAE3BuB,QAAS7B,KAAK8B,YAAYC,KAAK/B,OAQjC,OANIA,KAAKgC,cACPN,EAAiBC,MAAM3B,KAAKgC,cAAe,GAEzB,MAAhBhC,KAAKK,SACPqB,EAAmBO,OAAOC,OAAO,CAAC,EAAGR,EAAkB,CAAES,KAAMnC,KAAKgB,IAAKoB,MAAOpC,KAAKqC,YAAaC,KAAMtC,KAAKuC,WAAYC,SAAUxC,KAAKyC,eAAgB,gBAAiBzC,KAAK0C,aAAcC,GAAI3C,KAAK4C,SAAU,gBAAiB5C,KAAK6C,aAAc,eAAgB7C,KAAK8C,YAAa,aAAc9C,KAAK+C,cAElSC,EAAAA,EAAAA,GAAEhD,KAAKK,OAAQ4B,OAAOC,OAAO,CAAC,EAAGR,IAAmBsB,EAAAA,EAAAA,GAAE,OAAQ,MACxE,GAAC,CAAAxC,IAAA,KAAAyC,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAWlD,KAAO,IAAC,EAAAQ,IAAA,WAAAyC,IACrC,WAAwB,MAAO,CAC7B,SAAY,CAAC,gBACZ,KAACrD,CAAA,CApDS,GAsDfuD,EAAAA,EAAaC,YAAYxD,EAAW,CAClC,UACA,WACA,Q","sources":["../node_modules/@iot-app-kit/components/dist/esm/stencil-route-link.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-1cec361c.js';\nimport { m as matchPath, q as isModifiedEvent } from './dom-utils-97f33dea.js';\nimport { A as ActiveRouter } from './active-router-8f9f6b80.js';\n\nconst getUrl = (url, root) => {\n  // Don't allow double slashes\n  if (url.charAt(0) == '/' && root.charAt(root.length - 1) == '/') {\n    return root.slice(0, root.length - 1) + url;\n  }\n  return root + url;\n};\nconst RouteLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.unsubscribe = () => { return; };\n    this.activeClass = 'link-active';\n    this.exact = false;\n    this.strict = true;\n    /**\n      *  Custom tag to use instead of an anchor\n      */\n    this.custom = 'a';\n    this.match = null;\n  }\n  componentWillLoad() {\n    this.computeMatch();\n  }\n  // Identify if the current route is a match.\n  computeMatch() {\n    if (this.location) {\n      this.match = matchPath(this.location.pathname, {\n        path: this.urlMatch || this.url,\n        exact: this.exact,\n        strict: this.strict\n      });\n    }\n  }\n  handleClick(e) {\n    if (isModifiedEvent(e) || !this.history || !this.url || !this.root) {\n      return;\n    }\n    e.preventDefault();\n    return this.history.push(getUrl(this.url, this.root));\n  }\n  // Get the URL for this route link without the root from the router\n  render() {\n    let anchorAttributes = {\n      class: {\n        [this.activeClass]: this.match !== null,\n      },\n      onClick: this.handleClick.bind(this)\n    };\n    if (this.anchorClass) {\n      anchorAttributes.class[this.anchorClass] = true;\n    }\n    if (this.custom === 'a') {\n      anchorAttributes = Object.assign({}, anchorAttributes, { href: this.url, title: this.anchorTitle, role: this.anchorRole, tabindex: this.anchorTabIndex, 'aria-haspopup': this.ariaHaspopup, id: this.anchorId, 'aria-posinset': this.ariaPosinset, 'aria-setsize': this.ariaSetsize, 'aria-label': this.ariaLabel });\n    }\n    return (h(this.custom, Object.assign({}, anchorAttributes), h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"location\": [\"computeMatch\"]\n  }; }\n};\nActiveRouter.injectProps(RouteLink, [\n  'history',\n  'location',\n  'root'\n]);\n\nexport { RouteLink as stencil_route_link };\n"],"names":["RouteLink","hostRef","_classCallCheck","registerInstance","this","unsubscribe","activeClass","exact","strict","custom","match","_createClass","key","value","computeMatch","location","matchPath","pathname","path","urlMatch","url","e","root","isModifiedEvent","history","preventDefault","push","charAt","length","slice","anchorAttributes","class","_defineProperty","onClick","handleClick","bind","anchorClass","Object","assign","href","title","anchorTitle","role","anchorRole","tabindex","anchorTabIndex","ariaHaspopup","id","anchorId","ariaPosinset","ariaSetsize","ariaLabel","h","get","getElement","ActiveRouter","injectProps"],"sourceRoot":""}