{"version":3,"file":"static/js/4727.03352e9f.chunk.js","mappings":"4JAAA,IAAMA,EAAa,CACfC,MAAO,IACPC,OAAQ,I,kKCoBNC,G,qFAAQ,IAAIC,KAAK,IAAM,EAAG,IAC1BC,EAAQ,IAAID,KAAK,IAAM,EAAG,GAI1BE,EAAkB,CACtBC,GAAIJ,EAAMK,UAAYH,EAAMG,WAAa,EACzCC,EAAG,IAECC,EAAuB,WAC3B,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,EACzB,CAoCqC,OApCpCI,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,mBAAAC,MACD,WACE,IAAMC,EAAYJ,KAAKK,GAAGC,cAAc,mBAClCC,GAAQC,EAAAA,EAAAA,GAAW,CACvBC,SAAU,CACRC,MAAOrB,EACPsB,IAAKpB,EACLqB,KAjBM,EAkBNC,KAjBM,KAmBRC,YAAa,CACX,CACEC,GAAI,cACJC,KAAM,CAACxB,GACPyB,KAAM,mBACNC,MAAO,MACPC,WAAY,EACZC,SAAUC,EAAAA,EAASC,SAGvBC,UAAWrC,EAAAA,EACXkB,UAAAA,EACAoB,cAAe,IACfC,aAAc,EACdC,iBAAkB,CAChBC,WAAW,GAEbC,WAAY,KAEdC,EAAAA,EAAcC,cAAc,CAAEC,QAASxB,IACvC,IAAMyB,EAAO5B,EAAU6B,wBACvBJ,EAAAA,EAAcK,aAAa3B,EAAMQ,GAAIoB,OAAOC,OAAO,CAAEC,QAAS,GAAKL,EAAKM,UAC1E,GAAC,CAAApC,IAAA,SAAAC,MACD,WACE,OAAQoC,EAAAA,EAAAA,GAAE,mBAAoB,MAAMA,EAAAA,EAAAA,GAAE,MAAO,CAAExB,GAAI,iBAAkByB,MAAO,CAAErD,MAAO,GAAFsD,OAAKvD,EAAAA,EAAWC,MAAK,MAAMC,OAAQ,GAAFqD,OAAKvD,EAAAA,EAAWE,OAAM,SAC5I,GAAC,CAAAc,IAAA,KAAAwC,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAW3C,KAAO,KAACJ,CAAA,CAvCV,E","sources":["../node_modules/@iot-app-kit/components/dist/esm/chartSize-74a4bea8.js","../node_modules/@iot-app-kit/components/dist/esm/sc-line-chart-colored-point.entry.js"],"sourcesContent":["const CHART_SIZE = {\n    width: 100,\n    height: 100,\n};\n\nexport { CHART_SIZE as C };\n","import { r as registerInstance, h, g as getElement } from './index-1cec361c.js';\nimport { w as webGLRenderer } from './webglContext-6c9fd90d.js';\nimport { c as chartScene } from './chartScene-8136d831.js';\nimport { C as CHART_SIZE } from './chartSize-74a4bea8.js';\nimport { D as DataType } from './dataConstants-71f11842.js';\nimport './three.module-8c8bcb27.js';\nimport './predicates-248e16b2.js';\nimport './pointMesh-7ba3f14f.js';\nimport './clipSpaceConversion-9fa25666.js';\nimport './v4-b6bb7e11.js';\nimport './_commonjsHelpers-f9dc4873.js';\nimport './getDataPoints-c53771e0.js';\nimport './index-42a9af88.js';\nimport './time-b684d8c5.js';\nimport './index-b3f1c3a1.js';\nimport './utils-0919edc8.js';\nimport './number-3e8376bf.js';\nimport './constants-9d5458e0.js';\nimport './bisector-ecf52045.js';\nimport './common-a2d0f0fb.js';\n\n// viewport boundaries\nconst X_MIN = new Date(2000, 0, 0);\nconst X_MAX = new Date(2000, 0, 1);\nconst Y_MIN = 0;\nconst Y_MAX = 100;\n// test data point dead center of the viewport\nconst TEST_DATA_POINT = {\n  x: (X_MIN.getTime() + X_MAX.getTime()) / 2,\n  y: (Y_MIN + Y_MAX) / 2,\n};\nconst ScLineChartColoredPoint = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentDidLoad() {\n    const container = this.el.querySelector('#test-container');\n    const scene = chartScene({\n      viewport: {\n        start: X_MIN,\n        end: X_MAX,\n        yMin: Y_MIN,\n        yMax: Y_MAX,\n      },\n      dataStreams: [\n        {\n          id: 'test-stream',\n          data: [TEST_DATA_POINT],\n          name: 'test-stream-name',\n          color: 'red',\n          resolution: 0,\n          dataType: DataType.NUMBER,\n        },\n      ],\n      chartSize: CHART_SIZE,\n      container,\n      minBufferSize: 100,\n      bufferFactor: 2,\n      thresholdOptions: {\n        showColor: false,\n      },\n      thresholds: [],\n    });\n    webGLRenderer.addChartScene({ manager: scene });\n    const rect = container.getBoundingClientRect();\n    webGLRenderer.setChartRect(scene.id, Object.assign({ density: 1 }, rect.toJSON()));\n  }\n  render() {\n    return (h(\"sc-webgl-context\", null, h(\"div\", { id: \"test-container\", style: { width: `${CHART_SIZE.width}px`, height: `${CHART_SIZE.height}px` } })));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { ScLineChartColoredPoint as sc_line_chart_colored_point };\n"],"names":["CHART_SIZE","width","height","X_MIN","Date","X_MAX","TEST_DATA_POINT","x","getTime","y","ScLineChartColoredPoint","hostRef","_classCallCheck","registerInstance","this","_createClass","key","value","container","el","querySelector","scene","chartScene","viewport","start","end","yMin","yMax","dataStreams","id","data","name","color","resolution","dataType","DataType","NUMBER","chartSize","minBufferSize","bufferFactor","thresholdOptions","showColor","thresholds","webGLRenderer","addChartScene","manager","rect","getBoundingClientRect","setChartRect","Object","assign","density","toJSON","h","style","concat","get","getElement"],"sourceRoot":""}