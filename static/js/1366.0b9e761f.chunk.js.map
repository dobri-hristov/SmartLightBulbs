{"version":3,"file":"static/js/1366.0b9e761f.chunk.js","mappings":"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","sources":["../node_modules/@iot-app-kit/components/dist/esm/combineAnnotations-e0f67c56.js","../node_modules/@iot-app-kit/components/dist/esm/iot-time-series-connector.entry.js"],"sourcesContent":["const combineAnnotations = (prev, curr) => {\n  return Object.assign(Object.assign({}, prev), { y: [...((prev === null || prev === void 0 ? void 0 : prev.y) || []), ...((curr === null || curr === void 0 ? void 0 : curr.y) || [])] });\n};\n\nexport { combineAnnotations as c };\n","import { r as registerInstance } from './index-1cec361c.js';\nimport { c as combineAnnotations } from './combineAnnotations-e0f67c56.js';\n\n// CSS Color strings, in default order they'll be used.\nconst colorPalette = [\n  '#5e87b5',\n  '#e6ac8c',\n  '#7fc6b1',\n  '#d99090',\n  '#ae779c',\n  '#f9da95',\n  '#b088f5',\n  '#c55305',\n  '#018574',\n  '#486de8',\n  '#962249',\n  '#096f64',\n  '#8456ce',\n];\n\nconst assignDefaultColor = ({ dataStream, index, styleSettings, }) => {\n  const associatedStyles = dataStream.refId != null && styleSettings != null ? styleSettings[dataStream.refId] : {};\n  const hasAssociatedColor = 'color' in associatedStyles;\n  // Only provide default if one is not already present in the data stream, and none is specified in the associated style settings.\n  if (dataStream.color == null && !hasAssociatedColor) {\n    return Object.assign(Object.assign({}, dataStream), { color: colorPalette[index % colorPalette.length] });\n  }\n  return dataStream;\n};\n// If the data stream has a reference id with associated styles, append those styles to the data stream.\nconst bindStylesToDataStreams = ({ dataStreams, styleSettings, assignDefaultColors, }) => {\n  const streams = dataStreams.map((dataStream) => styleSettings == null || dataStream.refId == null\n    ? dataStream\n    : Object.assign(Object.assign({}, dataStream), styleSettings[dataStream.refId]));\n  return assignDefaultColors\n    ? streams.map((dataStream, index) => assignDefaultColor({ dataStream, index, styleSettings }))\n    : streams;\n};\n\nconst DEFAULT_VIEWPORT = { duration: 10 * 1000 * 60 }; // ten minutes\nconst combineTimeSeriesData = (timeSeresDataResults) => timeSeresDataResults.reduce((timeSeriesData, newTimeSeriesData) => {\n  const { dataStreams, viewport, annotations } = newTimeSeriesData;\n  const combinedAnnotations = combineAnnotations(timeSeriesData.annotations, annotations);\n  return {\n    dataStreams: [...timeSeriesData.dataStreams, ...dataStreams],\n    viewport,\n    annotations: combinedAnnotations,\n  };\n}, { dataStreams: [], viewport: { duration: 0 }, annotations: {} });\nconst IotTimeSeriesConnector = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.supportedDataTypes = ['NUMBER', 'BOOLEAN', 'STRING'];\n    this.data = {\n      dataStreams: [],\n      viewport: DEFAULT_VIEWPORT,\n      annotations: {},\n    };\n  }\n  componentWillLoad() {\n    this.provider.subscribe({\n      next: (results) => {\n        this.data = combineTimeSeriesData(results);\n      },\n    });\n  }\n  onProviderUpdate() {\n    this.provider.unsubscribe();\n    this.provider.subscribe({\n      next: (results) => {\n        this.data = combineTimeSeriesData(results);\n      },\n    });\n  }\n  componentDidUnmount() {\n    this.provider.unsubscribe();\n  }\n  render() {\n    const { dataStreams, viewport, annotations } = this.data;\n    const combinedAnnotations = combineAnnotations(this.annotations, annotations);\n    const filteredDataStreams = bindStylesToDataStreams({\n      dataStreams,\n      styleSettings: this.styleSettings,\n      assignDefaultColors: this.assignDefaultColors || false,\n    }).filter((stream) => {\n      if (stream.error || !stream.dataType)\n        return false;\n      if (stream.streamType === 'ALARM')\n        return true;\n      return this.supportedDataTypes.includes(stream.dataType);\n    });\n    return this.renderFunc({\n      dataStreams: filteredDataStreams,\n      viewport,\n      annotations: combinedAnnotations,\n    });\n  }\n  static get watchers() { return {\n    \"provider\": [\"onProviderUpdate\"]\n  }; }\n};\n\nexport { IotTimeSeriesConnector as iot_time_series_connector };\n"],"names":["combineAnnotations","prev","curr","Object","assign","y","concat","_toConsumableArray","colorPalette","bindStylesToDataStreams","_ref2","dataStreams","styleSettings","assignDefaultColors","streams","map","dataStream","refId","index","_ref","hasAssociatedColor","color","length","assignDefaultColor","DEFAULT_VIEWPORT","duration","combineTimeSeriesData","timeSeresDataResults","reduce","timeSeriesData","newTimeSeriesData","viewport","annotations","combinedAnnotations","IotTimeSeriesConnector","hostRef","_classCallCheck","registerInstance","this","supportedDataTypes","data","_createClass","key","value","_this","provider","subscribe","next","results","_this2","unsubscribe","_this3","_this$data","filteredDataStreams","filter","stream","error","dataType","streamType","includes","renderFunc","get"],"sourceRoot":""}