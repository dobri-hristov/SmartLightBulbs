{"version":3,"file":"static/js/7969.841ba0c8.chunk.js","mappings":"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","sources":["../node_modules/@iot-app-kit/components/dist/esm/constants-9d5458e0.js","../node_modules/@iot-app-kit/components/dist/esm/dataConstants-71f11842.js","../node_modules/@iot-app-kit/components/dist/esm/sc-webgl-chart-annotation-editable.entry.js"],"sourcesContent":["// NOTE: `enum`s are held separately from the types which are exported\n// as part of the package, since `enum`'s cannot be present in a type declaration file.\n// THis is due to an `enum` being a type plus an implementation, while type declaration\n// files can only contain typing information.\n/**\n * Maps the view model to d3 axis types. In the future we could add additional\n * custom scale types beyond what's available in `d3-axis`.\n */\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"TimeSeries\"] = \"time-series\";\n    ScaleType[\"Log\"] = \"log\";\n    ScaleType[\"Linear\"] = \"linear\";\n})(ScaleType || (ScaleType = {}));\nvar LEGEND_POSITION;\n(function (LEGEND_POSITION) {\n    LEGEND_POSITION[\"RIGHT\"] = \"RIGHT\";\n    LEGEND_POSITION[\"BOTTOM\"] = \"BOTTOM\";\n})(LEGEND_POSITION || (LEGEND_POSITION = {}));\nvar COMPARISON_OPERATOR;\n(function (COMPARISON_OPERATOR) {\n    COMPARISON_OPERATOR[\"LESS_THAN\"] = \"LT\";\n    COMPARISON_OPERATOR[\"GREATER_THAN\"] = \"GT\";\n    COMPARISON_OPERATOR[\"LESS_THAN_EQUAL\"] = \"LTE\";\n    COMPARISON_OPERATOR[\"GREATER_THAN_EQUAL\"] = \"GTE\";\n    COMPARISON_OPERATOR[\"EQUAL\"] = \"EQ\";\n    COMPARISON_OPERATOR[\"CONTAINS\"] = \"CONTAINS\";\n})(COMPARISON_OPERATOR || (COMPARISON_OPERATOR = {}));\nconst COMPARATOR_MAP = {\n    GTE: '>=',\n    GT: '>',\n    LTE: '<=',\n    LT: '<',\n    EQ: '=',\n};\nvar StatusIcon;\n(function (StatusIcon) {\n    StatusIcon[\"ERROR\"] = \"error\";\n    StatusIcon[\"ACTIVE\"] = \"active\";\n    StatusIcon[\"NORMAL\"] = \"normal\";\n    StatusIcon[\"ACKNOWLEDGED\"] = \"acknowledged\";\n    StatusIcon[\"SNOOZED\"] = \"snoozed\";\n    StatusIcon[\"DISABLED\"] = \"disabled\";\n    StatusIcon[\"LATCHED\"] = \"latched\";\n})(StatusIcon || (StatusIcon = {}));\nvar DATA_ALIGNMENT;\n(function (DATA_ALIGNMENT) {\n    DATA_ALIGNMENT[\"EITHER\"] = \"EITHER\";\n    DATA_ALIGNMENT[\"RIGHT\"] = \"RIGHT\";\n    DATA_ALIGNMENT[\"LEFT\"] = \"LEFT\";\n})(DATA_ALIGNMENT || (DATA_ALIGNMENT = {}));\n\nexport { COMPARISON_OPERATOR as C, DATA_ALIGNMENT as D, LEGEND_POSITION as L, StatusIcon as S, COMPARATOR_MAP as a, ScaleType as b };\n","var DataType;\n(function (DataType) {\n    DataType[\"NUMBER\"] = \"NUMBER\";\n    DataType[\"STRING\"] = \"STRING\";\n    DataType[\"BOOLEAN\"] = \"BOOLEAN\";\n})(DataType || (DataType = {}));\n/**\n * Stream type is a classification of a `DataStream`, which contains with it additional structure and features specific\n * to the stream type.\n *\n * For example, for an alarm stream, if a stream is associated to the alarm stream, we interpret the stream as\n * representing the status for the given alarm and present alarm specific UX such as alarm status on the legend and tooltip.\n */\nvar StreamType;\n(function (StreamType) {\n    StreamType[\"ALARM\"] = \"ALARM\";\n    StreamType[\"ANOMALY\"] = \"ANOMALY\";\n    StreamType[\"ALARM_THRESHOLD\"] = \"ALARM_THRESHOLD\";\n})(StreamType || (StreamType = {}));\nvar TREND_TYPE;\n(function (TREND_TYPE) {\n    TREND_TYPE[\"LINEAR\"] = \"linear-regression\";\n})(TREND_TYPE || (TREND_TYPE = {}));\nvar ChartType;\n(function (ChartType) {\n    ChartType[\"BarChart\"] = \"bar-chart\";\n    ChartType[\"LineChart\"] = \"line-chart\";\n})(ChartType || (ChartType = {}));\n\nexport { DataType as D, StreamType as S, TREND_TYPE as T };\n","import { r as registerInstance, h } from './index-1cec361c.js';\nimport { C as COMPARISON_OPERATOR } from './constants-9d5458e0.js';\nimport { D as DataType } from './dataConstants-71f11842.js';\n\nconst X_MIN = new Date(1998, 0, 0);\nconst X_MAX = new Date(2001, 0, 1);\nconst TEST_DATA_POINT = {\n  x: new Date(1999, 0, 0).getTime(),\n  y: 2000,\n};\nconst TEST_DATA_POINT_2 = {\n  x: new Date(2000, 0, 0).getTime(),\n  y: 4000,\n};\nconst TEST_2_DATA_POINT = {\n  x: new Date(1999, 0, 0).getTime(),\n  y: 4000,\n};\nconst TEST_2_DATA_POINT_2 = {\n  x: new Date(2000, 0, 0).getTime(),\n  y: 2000,\n};\nconst Y_THRESHOLD = {\n  isEditable: true,\n  comparisonOperator: COMPARISON_OPERATOR.GREATER_THAN,\n  value: 3800,\n  label: {\n    text: 'here is a y label',\n    show: true,\n  },\n  showValue: true,\n  color: 'blue',\n  id: 'blue-threshold',\n};\nconst Y_ANNOTATION = {\n  isEditable: true,\n  value: 3200,\n  label: {\n    text: 'another y label',\n    show: true,\n  },\n  showValue: true,\n  color: 'green',\n  id: 'green-anotation',\n};\nlet oldAnnotations;\nconst ScWebglChartAnnotationRescaling = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isEditableValue = false;\n    this.isShowValue = true;\n    this.annotations = {\n      x: [\n        {\n          value: new Date((X_MAX.getTime() + X_MIN.getTime()) / 2),\n          label: {\n            text: 'here is a x label',\n            show: true,\n          },\n          showValue: true,\n          color: 'purple',\n        },\n      ],\n      y: [\n        Object.assign(Object.assign({}, Y_ANNOTATION), { isEditable: !this.isEditableValue, showValue: this.isShowValue }),\n        Object.assign(Object.assign({}, Y_THRESHOLD), { isEditable: !this.isEditableValue, showValue: !this.isShowValue }),\n        Object.assign(Object.assign({}, Y_ANNOTATION), { isEditable: this.isEditableValue, value: 2300, color: 'red', showValue: this.isShowValue, id: 'red-annotation' }),\n      ],\n    };\n    this.changeValue = () => {\n      // this.annotations = oldAnnotations; //passed by reference so this doesn't work since draggable will modify oldAnnotations\n      // this mimics the seperate annotation state of the app and the SC layer\n      const { y } = this.annotations;\n      this.annotations = Object.assign(Object.assign({}, this.annotations), { y: y.map(annotation => {\n          return Object.assign(Object.assign({}, annotation), { value: oldAnnotations.y.find(oldannotation => oldannotation.id === annotation.id).value });\n        }) });\n    };\n    this.onEditableChange = () => {\n      const { y } = this.annotations;\n      this.annotations = Object.assign(Object.assign({}, this.annotations), { y: y.map(annotation => {\n          return Object.assign(Object.assign({}, annotation), { isEditable: !annotation.isEditable });\n        }) });\n    };\n    this.onShowValueChange = () => {\n      const { y } = this.annotations;\n      this.annotations = Object.assign(Object.assign({}, this.annotations), { y: y.map(annotation => {\n          return Object.assign(Object.assign({}, annotation), { showValue: !annotation.showValue });\n        }) });\n    };\n  }\n  onWidgetUpdated({ detail: configUpdate }) {\n    this.annotations = configUpdate.annotations;\n    oldAnnotations = this.annotations;\n  }\n  componentDidLoad() {\n    oldAnnotations = this.annotations;\n    setInterval(this.changeValue, 1000);\n  }\n  render() {\n    return (h(\"div\", { class: \"synchro-chart-tests\", style: { width: '1000px', height: '1000px' } }, h(\"div\", null, h(\"button\", { id: \"change-editable\", onClick: this.onEditableChange }, \"Change Editable\")), h(\"div\", null, h(\"button\", { id: \"change-showvalue\", onClick: this.onShowValueChange }, \"Change Show Value\")), h(\"div\", null, h(\"sc-line-chart\", { widgetId: \"widget-id\", dataStreams: [\n        {\n          id: 'test',\n          color: 'black',\n          name: 'test stream',\n          data: [TEST_DATA_POINT, TEST_DATA_POINT_2],\n          resolution: 0,\n          dataType: DataType.NUMBER,\n        },\n        {\n          id: 'test2',\n          color: 'orange',\n          name: 'test stream2',\n          data: [TEST_2_DATA_POINT, TEST_2_DATA_POINT_2],\n          resolution: 0,\n          dataType: DataType.NUMBER,\n        },\n      ], annotations: this.annotations, viewport: { start: X_MIN, end: X_MAX }, size: {\n        height: 1000,\n        width: 1000,\n      } }), h(\"sc-webgl-context\", null))));\n  }\n};\n\nexport { ScWebglChartAnnotationRescaling as sc_webgl_chart_annotation_editable };\n"],"names":["ScaleType","LEGEND_POSITION","COMPARISON_OPERATOR","StatusIcon","DATA_ALIGNMENT","COMPARATOR_MAP","GTE","GT","LTE","LT","EQ","DataType","StreamType","TREND_TYPE","ChartType","oldAnnotations","X_MIN","Date","X_MAX","TEST_DATA_POINT","x","getTime","y","TEST_DATA_POINT_2","TEST_2_DATA_POINT","TEST_2_DATA_POINT_2","Y_THRESHOLD","isEditable","comparisonOperator","GREATER_THAN","value","label","text","show","showValue","color","id","Y_ANNOTATION","ScWebglChartAnnotationRescaling","hostRef","_this","_classCallCheck","registerInstance","this","isEditableValue","isShowValue","annotations","Object","assign","changeValue","map","annotation","find","oldannotation","onEditableChange","onShowValueChange","_createClass","key","_ref","configUpdate","detail","setInterval","h","class","style","width","height","onClick","widgetId","dataStreams","name","data","resolution","dataType","NUMBER","viewport","start","end","size"],"sourceRoot":""}